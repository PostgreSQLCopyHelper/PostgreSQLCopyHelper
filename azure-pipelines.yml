resources:
  containers:
  - container: postgres_11
    image: npgsql/postgres:11
    options: '--volume /var/run/postgresql:/var/run/postgresql'
    ports:
    - 5432:5432

  # - container: postgres_10
  #   image: npgsql/postgres:10
  #   options: '--volume /var/run/postgresql:/var/run/postgresql'
  #   ports:
  #   - 5432:5432

  # - container: postgres_9_6
  #   image: npgsql/postgres:9.6
  #   options: '--volume /var/run/postgresql:/var/run/postgresql'
  #   ports:
  #   - 5432:5432

variables:
   buildConfiguration: 'Release'
   DOTNET_SDK_VERSION: 3.0.x

jobs:

- job: Linux

  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      postgres_11:
        postgres_service: postgres_11

      # postgres_10:
      #   postgres_service: postgres_10

      # postgres_9_6:
      #   postgres_service: postgres_9_6

  services:
    postgres: $[variables['postgres_service']]

  steps:
  - task: DotNetCoreInstaller@1
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: 'sdk'
      version: '$(DOTNET_SDK_VERSION)'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      configuration: $(buildConfiguration)
      projects: '**/*.csproj'

  # - task: DotNetCoreCLI@2
  #   displayName: 'Test'
  #   inputs:
  #     command: 'test'
  #     configuration: $(buildConfiguration)
  #     projects: '**/*Test.csproj'
  #     publishTestResults: true

- job: Windows

  pool:
    vmImage: 'windows-latest'

  steps:
  - task: DotNetCoreInstaller@1
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: 'sdk'
      version: '$(DOTNET_SDK_VERSION)'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      configuration: $(buildConfiguration)
      projects: '**/*.csproj'

  # - task: DotNetCoreCLI@2
  #   displayName: 'Test'
  #   inputs:
  #     command: 'test'
  #     configuration: $(buildConfiguration)
  #     projects: '**/*Test.csproj'
  #     publishTestResults: true
